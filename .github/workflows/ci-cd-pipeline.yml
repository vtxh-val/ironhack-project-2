name: CI / CD Pipeline
run-name: ${{ github.actor }} is Deploying

on:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.ref_name || github.sha }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ./vote 
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/vote:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/vote:latest
          
      - name: Build and push Docker image for result
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ./result 
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/result:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/result:latest

      - name: Build and push Docker image for worker
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ./worker  
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/worker:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/worker:latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
          curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.32.0/2024-12-20/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mkdir -p $HOME/bin
          mv ./kubectl $HOME/bin/kubectl
          echo "$HOME/bin" >> $GITHUB_PATH  # Use the new method to add to PATH

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_CLUSTER }}

      - name: Deploy to EKS
        run: |
          kubectl apply -f backend-redis.yaml
          kubectl apply -f backend-result.yaml
          kubectl apply -f backend-worker.yaml
          kubectl apply -f database-postgres.yaml
          kubectl apply -f frontend-vote.yaml
          kubectl apply -f ingress.yaml
          kubectl apply -f storageclass-gp2.yaml